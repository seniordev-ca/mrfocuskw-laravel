{"version":3,"file":"/_admin/js/pages/crud/forms/widgets/typeahead.js","mappings":"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","sources":["webpack:///./resources/metronic/js/pages/crud/forms/widgets/typeahead.js"],"sourcesContent":["// Class definition\r\nvar KTTypeahead = function() {\r\n    var states = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California',\r\n        'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii',\r\n        'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana',\r\n        'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota',\r\n        'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire',\r\n        'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota',\r\n        'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island',\r\n        'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont',\r\n        'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'\r\n    ];\r\n\r\n    // Private functions\r\n    var demo1 = function() {\r\n        var substringMatcher = function(strs) {\r\n            return function findMatches(q, cb) {\r\n                var matches, substringRegex;\r\n\r\n                // an array that will be populated with substring matches\r\n                matches = [];\r\n\r\n                // regex used to determine if a string contains the substring `q`\r\n                substrRegex = new RegExp(q, 'i');\r\n\r\n                // iterate through the pool of strings and for any string that\r\n                // contains the substring `q`, add it to the `matches` array\r\n                $.each(strs, function(i, str) {\r\n                    if (substrRegex.test(str)) {\r\n                        matches.push(str);\r\n                    }\r\n                });\r\n\r\n                cb(matches);\r\n            };\r\n        };\r\n\r\n        $('#kt_typeahead_1, #kt_typeahead_1_modal').typeahead({\r\n            hint: true,\r\n            highlight: true,\r\n            minLength: 1\r\n        }, {\r\n            name: 'states',\r\n            source: substringMatcher(states)\r\n        });\r\n    }\r\n\r\n    var demo2 = function() {\r\n        // constructs the suggestion engine\r\n        var bloodhound = new Bloodhound({\r\n            datumTokenizer: Bloodhound.tokenizers.whitespace,\r\n            queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n            // `states` is an array of state names defined in \\\"The Basics\\\"\r\n            local: states\r\n        });\r\n\r\n        $('#kt_typeahead_2, #kt_typeahead_2_modal').typeahead({\r\n            hint: true,\r\n            highlight: true,\r\n            minLength: 1\r\n        }, {\r\n            name: 'states',\r\n            source: bloodhound\r\n        });\r\n    }\r\n\r\n    var demo3 = function() {\r\n        var countries = new Bloodhound({\r\n            datumTokenizer: Bloodhound.tokenizers.whitespace,\r\n            queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n            // url points to a json file that contains an array of country names, see\r\n            // https://github.com/twitter/typeahead.js/blob/gh-pages/data/countries.json\r\n            prefetch: HOST_URL + '/api/?file=typeahead/countries.json'\r\n        });\r\n\r\n        // passing in `null` for the `options` arguments will result in the default\r\n        // options being used\r\n        $('#kt_typeahead_3, #kt_typeahead_3_modal').typeahead(null, {\r\n            name: 'countries',\r\n            source: countries\r\n        });\r\n    }\r\n\r\n    var demo4 = function() {\r\n        var bestPictures = new Bloodhound({\r\n            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),\r\n            queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n            prefetch: HOST_URL + '/api/?file=typeahead/movies.json'\r\n        });\r\n\r\n        $('#kt_typeahead_4').typeahead(null, {\r\n            name: 'best-pictures',\r\n            display: 'value',\r\n            source: bestPictures,\r\n            templates: {\r\n                empty: [\r\n                    '<div class=\\\"empty-message\\\" style=\\\"padding: 10px 15px; text-align: center;\\\">',\r\n                    'unable to find any Best Picture winners that match the current query',\r\n                    '</div>'\r\n                ].join('\\n'),\r\n                suggestion: Handlebars.compile('<div><strong>{{value}}</strong> â€“ {{year}}</div>')\r\n            }\r\n        });\r\n    }\r\n\r\n    var demo5 = function() {\r\n        var nbaTeams = new Bloodhound({\r\n            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('team'),\r\n            queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n            prefetch: HOST_URL + '/api/?file=typeahead/nba.json'\r\n        });\r\n\r\n        var nhlTeams = new Bloodhound({\r\n            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('team'),\r\n            queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n            prefetch: HOST_URL + '/api/?file=typeahead/nhl.json'\r\n        });\r\n\r\n        $('#kt_typeahead_5').typeahead({\r\n            highlight: true\r\n        }, {\r\n            name: 'nba-teams',\r\n            display: 'team',\r\n            source: nbaTeams,\r\n            templates: {\r\n                header: '<h3 class=\\\"league-name\\\" style=\\\"padding: 5px 15px; font-size: 1.2rem; margin:0;\\\">NBA Teams</h3>'\r\n            }\r\n        }, {\r\n            name: 'nhl-teams',\r\n            display: 'team',\r\n            source: nhlTeams,\r\n            templates: {\r\n                header: '<h3 class=\\\"league-name\\\" style=\\\"padding: 5px 15px; font-size: 1.2rem; margin:0;\\\">NHL Teams</h3>'\r\n            }\r\n        });\r\n    }\r\n\r\n    return {\r\n        // public functions\r\n        init: function() {\r\n            demo1();\r\n            demo2();\r\n            demo3();\r\n            demo4();\r\n            demo5();\r\n        }\r\n    };\r\n}();\r\n\r\njQuery(document).ready(function() {\r\n    KTTypeahead.init();\r\n});\r\n"],"names":["KTTypeahead","states","demo1","substringMatcher","strs","findMatches","q","cb","matches","substringRegex","substrRegex","RegExp","$","each","i","str","test","push","typeahead","hint","highlight","minLength","name","source","demo2","bloodhound","Bloodhound","datumTokenizer","tokenizers","whitespace","queryTokenizer","local","demo3","countries","prefetch","HOST_URL","demo4","bestPictures","obj","display","templates","empty","join","suggestion","Handlebars","compile","demo5","nbaTeams","nhlTeams","header","init","jQuery","document","ready"],"sourceRoot":""}